@model Bloggie.Web.Models.ViewModels.UserViewModel

@{
}


<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Users - Admin Functionality</h1>
    </div>
</div>

<div>
    <div class="container py-5">
        @if (Model != null && Model.Users.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Users)
                    {
                        <tr>
                            <td>@user.Id</td>
                            <td>@user.Username</td>
                            <td>@user.EmailAddress</td>
                            <td>
                                <form method="post"
                                      asp-controller="AdminUsers"
                                      asp-action="Delete"
                                      asp-route-id="@user.Id">
                                    <button class="btn btn-danger" type="submit">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="pagination">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @if (Model.PageIndex > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("List", new { page = Model.PageIndex - 1 })" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        }
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link" href="@Url.Action("List", new { page = i })">@i</a>
                            </li>
                        }
                        @if (Model.PageIndex < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("List", new { page = Model.PageIndex + 1 })" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
        else
        {
            <p>No users found!</p>
        }
    </div>

</div>


<!-- Modal -->
<form method="post" id="createUserForm">
    <div class="modal fade" id="modalCreateUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Create New User</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <input type="text" class="form-control" asp-for="Username" />
                        <div class="invalid-feedback">Please enter a username.</div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email Address</label>
                        <input type="text" class="form-control" asp-for="Email" />
                        <div class="invalid-feedback">Please enter a valid email address.</div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <input type="password" class="form-control" asp-for="Password" />
                        <div class="invalid-feedback">Please enter a valid Password.</div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input type="checkbox" id="chkUserRole" class="form-check-input" value="User" checked disabled />
                            <label class="form-check-label" for="chkUserRole">User Role</label>
                        </div>

                  @*       @if (User.IsInRole("Admin"))
                        {
                            <div class="form-check">
                                <input type="checkbox" id="chkAdminRole" class="form-check-input"
                                       asp-for="AdminRoleCheckbox" />
                                <label class="form-check-label" for="chkAdminRole">Admin Role</label>
                            </div>
                        } *@

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

</form>


<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        $("#Username").on("input", function () {
            validateUsername();
        });

        $("#Email").on("input", function () {
            validateEmail();
        });

        $("#Password").on("input", function () {
            validatePassword();
        });

        function validateUsername() {
            var username = $("#Username").val();
            var isValid = isUsernameValid(username);

            if (isValid) {
                $("#Username").removeClass("is-invalid");
            } else {
                $("#Username").addClass("is-invalid");
            }

            return isValid;
        }

        function validateEmail() {
            var email = $("#Email").val();
            var isValid = isEmailValid(email);

            if (isValid) {
                $("#Email").removeClass("is-invalid");
            } else {
                $("#Email").addClass("is-invalid");
            }

            return isValid;
        }

        function validatePassword() {
            var password = $("#Password").val();
            var isValid = isPasswordValid(password);

            if (isValid) {
                $("#Password").removeClass("is-invalid");
            } else {
                $("#Password").addClass("is-invalid");
            }

            return isValid;
        }

        function isUsernameValid(username) {
            // Simple username validation: Check if the username field is not empty
            return username.trim() !== "";
        }

        function isEmailValid(email) {
            // Simple email validation: Check if the email field is not empty
            return email.trim() !== "";
        }

        function isPasswordValid(password) {
            // Password validation: Check if the password field is at least 8 characters long
            return password.length >= 8;
        }

        $("#createUserForm").submit(function (event) {
            if (!validateUsername() || !validateEmail() || !validatePassword()) {
                event.preventDefault();
            }
        });
    });
</script>

