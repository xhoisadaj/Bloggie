@model Bloggie.Web.Models.ViewModels.AddTagRequest
@{
}
@if (TempData["SuccessMessage"] != null)
{
    <div id="success-toast" class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-body">
            @TempData["SuccessMessage"]
        </div>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div id="success-toast" class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-body">
            @TempData["ErrorMessage"]
        </div>
    </div>
}

<div class="bg-secondary bg-opacity-10 py-2">
    <div class="container">
        <h1>Add New Tag - Admin Functionality</h1>
    </div>
</div>

<div class="container py-5">
    <form method="post" class="container needs-validation" novalidate>
        <div class="mb-3" validate-me>
            <label class="form-label">Name</label>
            <input type="text" class="form-control" id="name" asp-for="Name" required />
            <span class="text-danger" asp-validation-for="Name"></span>
            <div class="invalid-feedback" asp-validation-for="Name">
                Name is required.
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label">Display Name</label>
            <input type="text" class="form-control" id="displayName" asp-for="DisplayName" required />
        
            <div class="invalid-feedback" asp-validation-for="DisplayName">
                Display Name is required.
            </div>
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-dark">Submit</button>
        </div>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <strong>Error!</strong> Please correct the following issues:
                <ul>
                    @foreach (var modelError in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@modelError.ErrorMessage</li>
                    }
                </ul>
            </div>
        }
    </form>
</div>
@section Scripts {
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
                        }